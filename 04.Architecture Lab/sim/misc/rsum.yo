0x000:                      | .pos 0
0x000: 30f40002000000000000 | irmovq stack, %rsp
0x00a: 808100000000000000   | call main
0x013: 00                   | halt
                            | 
                            | # Setup linked list elements
0x018:                      | .align 8 
0x018:                      | ele1: 
0x018: 0a00000000000000     |     .quad 0x00a 
0x020: 2800000000000000     |     .quad ele2 
0x028:                      | ele2: 
0x028: b000000000000000     |     .quad 0x0b0 
0x030: 3800000000000000     |     .quad ele3 
0x038:                      | ele3: 
0x038: 000c000000000000     |     .quad 0xc00 
0x040: 0000000000000000     |     .quad 0
                            | 
                            | # long rsum_list(list_ptr ls)
                            | # ls in %rdi
0x048:                      | rsum_list:
0x048: 30f00000000000000000 |     irmovq $0, %rax
0x052: 6277                 |     andq %rdi, %rdi # Set CC
0x054: 738000000000000000   |     je end    # return if ls is nullptr
                            | 
0x05d: 50070000000000000000 |     mrmovq (%rdi), %rax  # Get ls->val
0x067: 50770800000000000000 |     mrmovq 8(%rdi), %rdi # Set ls to ls->next 
0x071: a00f                 |     pushq %rax  # Save %rax
0x073: 804800000000000000   |     call rsum_list
0x07c: b08f                 |     popq %r8
0x07e: 6080                 |     addq %r8, %rax
                            | 
0x080:                      | end:
0x080: 90                   |     ret # return
                            | 
0x081:                      | main:
0x081: 30f71800000000000000 |     irmovq ele1, %rdi
0x08b: 804800000000000000   |     call rsum_list
0x094: 90                   |     ret
                            | 
                            | # Setup stack
0x200:                      | .pos 0x200
0x200:                      | stack:
